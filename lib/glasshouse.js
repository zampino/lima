// Generated by CoffeeScript 1.4.0
(function() {

  this.GlassHouse = (function() {
    var _this = this;

    function GlassHouse(options) {
      $("#" + options.formId).jsonForm({
        form: this.form,
        schema: this.schema
      });
    }

    GlassHouse.loadAxioms = function(name) {
      return $.ajax({
        url: "glasshouse/plants/" + name + ".json",
        dataType: "text"
      }).done(function(code) {
        var aceId, editor;
        aceId = $("#form .ace_editor").attr("id");
        editor = ace.edit(aceId);
        return editor.getSession().setValue(GlassHouse.render(code));
      });
    };

    GlassHouse.render = function(code) {
      return "Lima.load(" + code + ")\n" + ".iterate(3)\n" + ".run('canvas',\n  {step: 10,\n" + "                origin: function(w,h) {\n" + "                  return {x: w/2, y:h/2, angle: 90};\n" + "               }});";
    };

    GlassHouse.prototype.run = function() {};

    GlassHouse.prototype.form = [
      {
        key: "axioms",
        notitle: true,
        titleMap: {
          basic: "spinning ivy",
          dragon: "the classical dragon fractal"
        },
        htmlClass: "trywith",
        onChange: function(e) {
          var selected;
          selected = $(e.target).val();
          return GlassHouse.loadAxioms(selected);
        }
      }, {
        key: "console",
        type: "ace",
        width: "100%",
        height: window.innerHeight + 'px',
        notitle: true,
        onChange: function() {
          return this.run();
        }
      }
    ];

    GlassHouse.prototype.schema = {
      axioms: {
        title: "axioms to load",
        type: "string",
        "enum": ["dragon", "basic"],
        "default": "basic"
      },
      console: {
        title: "load or edit axioms",
        type: "string"
      }
    };

    return GlassHouse;

  }).call(this);

}).call(this);
